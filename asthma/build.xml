<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project xmlns:jacoco="antlib:org.jacoco.ant" name="asthma-game" basedir=".">

  <property name="src" value="src" />
  <property name="build" value="bin"/>
  <property name="lib" value="lib"/>
  <property name="lwjgl_natives.dir" value="natives/windows"/>
  <property name="jac-r" value="jacoco-report"/>
  <property name="jun-r" value="junit-report"/>
  <property name="build.sysclasspath" value="last"/>
  <taskdef uri="antlib:org.jacoco.ant" resource="org/jacoco/ant/antlib.xml">
	<classpath path="${lib}/jacocoant.jar"/>
  </taskdef>

  <path id="my_cp">
    <fileset dir="${lib}" includes="lwjgl.jar"/>
    <fileset dir="${lib}" includes="lwjgl_util.jar"/>
  	<fileset dir="${lib}" includes="jogg-0.0.7.jar"/>
  	<fileset dir="${lib}" includes="jorbis-0.0.15.jar"/>
    <fileset dir="${lib}" includes="slick-util.jar"/>
  	<fileset dir="${lib}" includes="jacocoant.jar"/>
  	<fileset dir="${lib}" includes="junit.jar"/>
  	<fileset dir="${lib}" includes="org.hamcrest.core_1.3.0.v201303031735.jar"/>
  	<fileset dir="${lib}" includes="mysql-connector-java-5.1.34-bin.jar"/>
  </path>
	
  <path id="all_cp">
  	<path refid="my_cp"/>
  	<pathelement location="${build}"/>
  </path>
	
 
  <target name="compile" depends = "clean">
    <mkdir dir="${build}"/>
    <javac srcdir="${src}" destdir="${build}" classpathref="my_cp" includeAntRuntime="false" >
  	</javac>
  </target>
	
	<target name="jar" depends = "compile">
		<mkdir dir="TeamCAsthmaGame"/>
		<jar destfile="TeamCAsthmaGame/app.jar" basedir="${build}">
			<manifest>
				<attribute name="Main-Class" value="com.groupc.Tester"/>
				<attribute name="Class-Path" value="lib/mysql-connector-java-5.1.34-bin.jar lib/jacocoant.jar lib/junit.jar lib/org.hamcrest.core_1.3.0.v201303031735.jar lib/jogg-0.0.7.jar lib/jorbis-0.0.15.jar lib/lwjgl_util.jar lib/lwjgl.jar lib/slick-util.jar"/>
			</manifest>
		</jar>
		 <copy todir="TeamCAsthmaGame/lib">
		 	<fileset dir="lib/"/>
		</copy>
		 <copy todir="TeamCAsthmaGame/natives">
		 	<fileset dir="natives/"/>
		</copy>
	 	 <copy todir="TeamCAsthmaGame/resources">
		 	<fileset dir="resources/"/>
		</copy>
		<copy file="login_information.txt" todir="TeamCAsthmaGame"/>
	</target>

  <target name="clean">
    <delete dir="${build}"/>
  	<delete dir="${jac-r}"/>
  	<delete dir="${jun-r}"/>
  	<delete dir="fb-report"/>
  	<delete dir="pmd-report"/>
  	<delete dir="TeamCAsthmaGame"/>
  </target>

  <target name="run">
    <!--
      fork="true" seems to be absolutely
      necessary for the setting of java.library.path
      to be effective. -->

    <java fork="true" classname="com.groupc.Tester">
      <classpath>
        <path refid="my_cp"/>
        <path location="${build}"/>
      </classpath>
      <sysproperty key="java.library.path"
                   value="${lwjgl_natives.dir}"/>
    </java>
  </target>	
	
  <target name="junit">
    <mkdir dir="${jac-r}"/>
  	<mkdir dir="${jun-r}"/>
  	<jacoco:coverage>
  	  <junit printsummary="withOutAndErr" haltonfailure="no" fork="yes" forkmode="once" showoutput="yes">
  	  		<classpath>
  	          <path refid="my_cp"/>
  	          <path location="${build}"/>
  	        </classpath>
  	  	<sysproperty key="java.library.path"
  	                     value="${lwjgl_natives.dir}"/>
  	    <formatter type="xml"/>
  	    <batchtest todir="${jun-r}">
  	      <fileset dir="${src}">
  	        <include name="**/*Test.java"/>
  	      </fileset>
  	    </batchtest>
  	  </junit>
  	</jacoco:coverage>
  	<junitreport todir="${jun-r}">
  	  <fileset dir="${jun-r}">
  	    <include name="TEST-*.xml"/>
  	  </fileset>
  	  <report todir="${jun-r}"/>
  	</junitreport>
  	<!--
  	 Step 2: Wrap test execution with the JaCoCo coverage task 
  	-->
  	<jacoco:coverage destfile="jacoco.exec">
  	<java classname="com.groupc.Tester" fork="true">
  		<classpath>
  		  	   <path refid="all_cp"/>
  		 </classpath>
  	</java>
  	</jacoco:coverage>
  	<!--  Step 3: Create coverage report  -->
  	<jacoco:report>
  	<!--
  	 This task needs the collected execution data and ... 
  	-->
  	  <executiondata>
  	    <file file="jacoco.exec"/>
  	  </executiondata>
  	<!--  the class files and optional source files ...  -->
  	  <structure name="JaCoCo Ant Example">
  	    <classfiles>
  	      <fileset dir="${build}"/>
  	    </classfiles>
  	  </structure>
  	<!--  to produce reports in different formats.  -->
  	<html destdir="jacoco-report"/>
  	<csv destfile="jacoco-report/report.csv"/>
  	<xml destfile="jacoco-report/report.xml"/>
  	</jacoco:report>
  	</target>
	
	<property name="findbug" location="${basedir}/lib/findbugs" />
		<target name="findbugs" >
			<taskdef name="findbugs" 
			    classname="edu.umd.cs.findbugs.anttask.FindBugsTask">
			    <classpath>
			       <fileset dir="lib/findbugs"/>
			    </classpath>
			</taskdef>
		  <mkdir dir="fb-report"/>
		  <findbugs home="${findbug}"
	              output="xml"
	              outputFile="fb-report/findbugs.xml" >
		  	<auxClasspath path="lib"/>
		    <sourcePath path="${src}" />
		    <class location="${build}" />
		  </findbugs>
			
			<xslt in="fb-report/findbugs.xml"
			              style="fancy.xsl"
			              out="fb-report/findbugs-default.html"
			        />
		  	
		</target>
		
		<property name="pmd.home" location="lib/pmd" />
		<path id="pmd.classpath">
		    	<fileset dir="${pmd.home}" includes="*.jar" />
		</path>
		<taskdef name="pmd" classname="net.sourceforge.pmd.ant.PMDTask" classpathref="pmd.classpath"/>
	
		<target name="pmd">

			  <mkdir dir="pmd-report"/>
			<pmd shortFilenames="true">
	  			<sourceLanguage name="java" version="1.8"/>
	  			<ruleset>rulesets/java/design.xml</ruleset>
	  			<ruleset>java-basic</ruleset>
	  			<formatter type="html" toFile="pmd-report/pmd_report_fromant.html">
	    				<param name="linkPrefix" value="http://pmd.sourceforge.net/xref/"/>
	  			</formatter>
				<formatter type="xml" toFile="pmd-report/pmd_report.xml">
					    				<param name="linkPrefix" value="http://pmd.sourceforge.net/xref/"/>
			  	</formatter>
	  			<fileset dir="${src}"/>
	 		</pmd>
		</target>
</project>